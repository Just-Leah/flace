--Stand for "Small DKJson", a minified version of "http://dkolf.de/src/dkjson-lua.fsl/home"
local a=false;local b=false;local c='json'local pairs,type,tostring,tonumber,getmetatable,setmetatable,rawset=pairs,type,tostring,tonumber,getmetatable,setmetatable,rawset;local error,require,pcall,select=error,require,pcall,select;local d,e=math.floor,math.huge;local f,g,h,i,j,k,l,m=string.rep,string.gsub,string.sub,string.byte,string.char,string.find,string.len,string.format;local n=string.match;local o=table.concat;local p={version="dkjson 2.6"}local q={}if b then if a then _G[c]=q else _G[c]=p end end;local r=nil;pcall(function()local s=require"debug".getmetatable;if s then getmetatable=s end end)p.null=setmetatable({},{__tojson=function()return"null"end})local function t(u)local v,w,x=0,0,0;for y,z in pairs(u)do if y=='n'and type(z)=='number'then x=z;if z>v then v=z end else if type(y)~='number'or y<1 or d(y)~=y then return false end;if y>v then v=y end;w=w+1 end end;if v>10 and v>x and v>w*2 then return false end;return true,v end;local A={["\""]="\\\"",["\\"]="\\\\",["\b"]="\\b",["\f"]="\\f",["\n"]="\\n",["\r"]="\\r",["\t"]="\\t"}local function B(C)local D=A[C]if D then return D end;local E,F,G,H=i(C,1,4)E,F,G,H=E or 0,F or 0,G or 0,H or 0;if E<=0x7f then D=E elseif 0xc0<=E and E<=0xdf and F>=0x80 then D=(E-0xc0)*0x40+F-0x80 elseif 0xe0<=E and E<=0xef and F>=0x80 and G>=0x80 then D=((E-0xe0)*0x40+F-0x80)*0x40+G-0x80 elseif 0xf0<=E and E<=0xf7 and F>=0x80 and G>=0x80 and H>=0x80 then D=(((E-0xf0)*0x40+F-0x80)*0x40+G-0x80)*0x40+H-0x80 else return""end;if D<=0xffff then return m("\\u%.4x",D)elseif D<=0x10ffff then D=D-0x10000;local I,J=0xD800+d(D/0x400),0xDC00+D%0x400;return m("\\u%.4x\\u%.4x",I,J)else return""end end;local function K(L,M,N)if k(L,M)then return g(L,M,N)else return L end end;local function O(D)D=K(D,"[%z\1-\31\"\\\127]",B)if k(D,"[\194\216\220\225\226\239]")then D=K(D,"\194[\128-\159\173]",B)D=K(D,"\216[\128-\132]",B)D=K(D,"\220\143",B)D=K(D,"\225\158[\180\181]",B)D=K(D,"\226\128[\140-\143\168-\175]",B)D=K(D,"\226\129[\160-\175]",B)D=K(D,"\239\187\191",B)D=K(D,"\239\191[\176-\191]",B)end;return"\""..D.."\""end;p.quotestring=O;local function P(L,Q,w)local R,S=k(L,Q,1,true)if R then return h(L,1,R-1)..w..h(L,S+1,-1)else return L end end;local T,U;local function V()T=n(tostring(0.5),"([^05+])")U="[^0-9%-%+eE"..g(T,"[%^%$%(%)%%%.%[%]%*%+%-%?]","%%%0").."]+"end;V()local function W(X)return P(K(tostring(X),U,""),T,".")end;local function Y(L)local X=tonumber(P(L,".",T))if not X then V()X=tonumber(P(L,".",T))end;return X end;local function Z(_,a0,a1)a0[a1+1]="\n"a0[a1+2]=f("  ",_)a1=a1+2;return a1 end;function p.addnewline(a2)if a2.indent then a2.bufferlen=Z(a2.level or 0,a2.buffer,a2.bufferlen or#a2.buffer)end end;local a3;local function a4(a5,D,a6,a7,_,a0,a1,a8,a9,a2)local aa=type(a5)if aa~='string'and aa~='number'then return nil,"type '"..aa.."' is not supported as a key by JSON."end;if a6 then a1=a1+1;a0[a1]=","end;if a7 then a1=Z(_,a0,a1)end;a0[a1+1]=O(a5)a0[a1+2]=":"return a3(D,a7,_,a0,a1+2,a8,a9,a2)end;local function ab(ac,a0,a2)local a1=a2.bufferlen;if type(ac)=='string'then a1=a1+1;a0[a1]=ac end;return a1 end;local function ad(ae,D,a2,a0,a1,af)af=af or ae;local ag=a2.exception;if not ag then return nil,af else a2.bufferlen=a1;local ah,ai=ag(ae,D,a2,af)if not ah then return nil,ai or af end;return ab(ah,a0,a2)end end;function p.encodeexception(ae,D,a2,af)return O("<"..af..">")end;a3=function(D,a7,_,a0,a1,a8,a9,a2)local aj=type(D)local ak=getmetatable(D)ak=type(ak)=='table'and ak;local al=ak and ak.__tojson;if al then if a8[D]then return ad('reference cycle',D,a2,a0,a1)end;a8[D]=true;a2.bufferlen=a1;local ah,ai=al(D,a2)if not ah then return ad('custom encoder failed',D,a2,a0,a1,ai)end;a8[D]=nil;a1=ab(ah,a0,a2)elseif D==nil then a1=a1+1;a0[a1]="null"elseif aj=='number'then local am;if D~=D or D>=e or-D>=e then am="null"else am=W(D)end;a1=a1+1;a0[a1]=am elseif aj=='boolean'then a1=a1+1;a0[a1]=D and"true"or"false"elseif aj=='string'then a1=a1+1;a0[a1]=O(D)elseif aj=='table'then if a8[D]then return ad('reference cycle',D,a2,a0,a1)end;a8[D]=true;_=_+1;local an,w=t(D)if w==0 and ak and ak.__jsontype=='object'then an=false end;local ai;if an then a1=a1+1;a0[a1]="["for R=1,w do a1,ai=a3(D[R],a7,_,a0,a1,a8,a9,a2)if not a1 then return nil,ai end;if R<w then a1=a1+1;a0[a1]=","end end;a1=a1+1;a0[a1]="]"else local a6=false;a1=a1+1;a0[a1]="{"local ao=ak and ak.__jsonorder or a9;if ao then local ap={}w=#ao;for R=1,w do local y=ao[R]local z=D[y]if z~=nil then ap[y]=true;a1,ai=a4(y,z,a6,a7,_,a0,a1,a8,a9,a2)a6=true end end;for y,z in pairs(D)do if not ap[y]then a1,ai=a4(y,z,a6,a7,_,a0,a1,a8,a9,a2)if not a1 then return nil,ai end;a6=true end end else for y,z in pairs(D)do a1,ai=a4(y,z,a6,a7,_,a0,a1,a8,a9,a2)if not a1 then return nil,ai end;a6=true end end;if a7 then a1=Z(_-1,a0,a1)end;a1=a1+1;a0[a1]="}"end;a8[D]=nil else return ad('unsupported type',D,a2,a0,a1,"type '"..aj.."' is not supported by JSON.")end;return a1 end;function p.encode(D,a2)a2=a2 or{}local aq=a2.buffer;local a0=aq or{}a2.buffer=a0;V()local ah,ai=a3(D,a2.indent,a2.level or 0,a0,a2.bufferlen or 0,a2.tables or{},a2.keyorder,a2)if not ah then error(ai,2)elseif aq==a0 then a2.bufferlen=ah;return true else a2.bufferlen=nil;a2.buffer=nil;return o(a0)end end;local function ar(L,as)local at,au,av=1,1,0;while true do au=k(L,"\n",au,true)if au and au<as then at=at+1;av=au;au=au+1 else break end end;return"line "..at..", column "..as-av end;local function aw(L,ax,as)return nil,l(L)+1,"unterminated "..ax.." at "..ar(L,as)end;local function ay(L,au)while true do au=k(L,"%S",au)if not au then return nil end;local az=h(L,au,au+1)if az=="\239\187"and h(L,au+2,au+2)=="\191"then au=au+3 elseif az=="//"then au=k(L,"[\n\r]",au+2)if not au then return nil end elseif az=="/*"then au=k(L,"*/",au+2)if not au then return nil end;au=au+2 else return au end end end;local aA={["\""]="\"",["\\"]="\\",["/"]="/",["b"]="\b",["f"]="\f",["n"]="\n",["r"]="\r",["t"]="\t"}local function aB(D)if D<0 then return nil elseif D<=0x007f then return j(D)elseif D<=0x07ff then return j(0xc0+d(D/0x40),0x80+d(D)%0x40)elseif D<=0xffff then return j(0xe0+d(D/0x1000),0x80+d(D/0x40)%0x40,0x80+d(D)%0x40)elseif D<=0x10ffff then return j(0xf0+d(D/0x40000),0x80+d(D/0x1000)%0x40,0x80+d(D/0x40)%0x40,0x80+d(D)%0x40)else return nil end end;local function aC(L,au)local aD=au+1;local a0,w={},0;while true do local aE=k(L,"[\"\\]",aD)if not aE then return aw(L,"string",au)end;if aE>aD then w=w+1;a0[w]=h(L,aD,aE-1)end;if h(L,aE,aE)=="\""then aD=aE+1;break else local aF=h(L,aE+1,aE+1)local D;if aF=="u"then D=tonumber(h(L,aE+2,aE+5),16)if D then local aG;if 0xD800<=D and D<=0xDBff then if h(L,aE+6,aE+7)=="\\u"then aG=tonumber(h(L,aE+8,aE+11),16)if aG and 0xDC00<=aG and aG<=0xDFFF then D=(D-0xD800)*0x400+aG-0xDC00+0x10000 else aG=nil end end end;D=D and aB(D)if D then if aG then aD=aE+12 else aD=aE+6 end end end end;if not D then D=aA[aF]or aF;aD=aE+2 end;w=w+1;a0[w]=D end end;if w==1 then return a0[1],aD elseif w>1 then return o(a0),aD else return"",aD end end;local aH;local function aI(ax,aJ,L,aK,aL,aM,aN)local aO=l(L)local u,w={},0;local au=aK+1;if ax=='object'then setmetatable(u,aM)else setmetatable(u,aN)end;while true do au=ay(L,au)if not au then return aw(L,ax,aK)end;local aP=h(L,au,au)if aP==aJ then return u,au+1 end;local aQ,aR;aQ,au,aR=aH(L,au,aL,aM,aN)if aR then return nil,au,aR end;au=ay(L,au)if not au then return aw(L,ax,aK)end;aP=h(L,au,au)if aP==":"then if aQ==nil then return nil,au,"cannot use nil as table index (at "..ar(L,au)..")"end;au=ay(L,au+1)if not au then return aw(L,ax,aK)end;local aS;aS,au,aR=aH(L,au,aL,aM,aN)if aR then return nil,au,aR end;u[aQ]=aS;au=ay(L,au)if not au then return aw(L,ax,aK)end;aP=h(L,au,au)else w=w+1;u[w]=aQ end;if aP==","then au=au+1 end end end;aH=function(L,au,aL,aM,aN)au=au or 1;au=ay(L,au)if not au then return nil,l(L)+1,"no valid JSON value (reached the end)"end;local aP=h(L,au,au)if aP=="{"then return aI('object',"}",L,au,aL,aM,aN)elseif aP=="["then return aI('array',"]",L,au,aL,aM,aN)elseif aP=="\""then return aC(L,au)else local aT,aU=k(L,"^%-?[%d%.]+[eE]?[%+%-]?%d*",au)if aT then local aV=Y(h(L,aT,aU))if aV then return aV,aU+1 end end;aT,aU=k(L,"^%a%w*",au)if aT then local aW=h(L,aT,aU)if aW=="true"then return true,aU+1 elseif aW=="false"then return false,aU+1 elseif aW=="null"then return aL,aU+1 end end;return nil,au,"no valid JSON value at "..ar(L,au)end end;local function aX(...)if select("#",...)>0 then return...else return{__jsontype='object'},{__jsontype='array'}end end;function p.decode(L,au,aL,...)local aM,aN=aX(...)return aH(L,au,aL,aM,aN)end;function p.use_lpeg()local aY=require("lpeg")if aY.version()=="0.11"then error"due to a bug in LPeg 0.11, it cannot be used for JSON matching"end;local aZ=aY.match;local a_,b0,b1=aY.P,aY.S,aY.R;local function b2(L,au,ai,a2)if not a2.msg then a2.msg=ai.." at "..ar(L,au)a2.pos=au end;return false end;local function b3(ai)return aY.Cmt(aY.Cc(ai)*aY.Carg(2),b2)end;local function b4(L,au,ax,a2)return b2(L,au-1,"unterminated "..ax,a2)end;local b5=a_"//"*(1-b0"\n\r")^0;local b6=a_"/*"*(1-a_"*/")^0*a_"*/"local b7=(b0" \n\r\t"+a_"\239\187\191"+b5+b6)^0;local function b8(ax)return aY.Cmt(aY.Cc(ax)*aY.Carg(2),b4)end;local b9=1-b0"\"\\\n\r"local ba=a_"\\"*aY.C(b0"\"\\/bfnrt"+b3"unsupported escape sequence")/aA;local bb=b1("09","af","AF")local function bc(bd,au,be,bf)be,bf=tonumber(be,16),tonumber(bf,16)if 0xD800<=be and be<=0xDBff and 0xDC00<=bf and bf<=0xDFFF then return true,aB((be-0xD800)*0x400+bf-0xDC00+0x10000)else return false end end;local function bg(bh)return aB(tonumber(bh,16))end;local bi=a_"\\u"*aY.C(bb*bb*bb*bb)local bj=aY.Cmt(bi*bi,bc)+bi/bg;local bk=bj+ba+b9;local bl=a_"\""*(aY.Cs(bk^0)*a_"\""+b8"string")local bm=a_"-"^-1*(a_"0"+b1"19"*b1"09"^0)local bn=a_"."*b1"09"^0;local bo=b0"eE"*b0"+-"^-1*b1"09"^1;local bp=bm*bn^-1*bo^-1/Y;local bq=a_"true"*aY.Cc(true)+a_"false"*aY.Cc(false)+a_"null"*aY.Carg(1)local br=bp+bl+bq;local bs,bt;local function bu(L,au,aL,a2)local bv,bw;local bx=au;local by;local bz,bA={},0;repeat bv,bw,by=aZ(bs,L,au,aL,a2)if bw=='end'then return b4(L,bx,"array",a2)end;au=by;if bw=='cont'or bw=='last'then bA=bA+1;bz[bA]=bv end until bw~='cont'return au,setmetatable(bz,a2.arraymeta)end;local function bB(L,au,aL,a2)local bv,a5,bw;local bx=au;local by;local bz={}repeat a5,bv,bw,by=aZ(bt,L,au,aL,a2)if bw=='end'then return b4(L,bx,"object",a2)end;au=by;if bw=='cont'or bw=='last'then bz[a5]=bv end until bw~='cont'return au,setmetatable(bz,a2.objectmeta)end;local bC=a_"["*aY.Cmt(aY.Carg(1)*aY.Carg(2),bu)local bD=a_"{"*aY.Cmt(aY.Carg(1)*aY.Carg(2),bB)local bE=b7*(bC+bD+br)local bF=bE+b7*b3"value expected"local bG=bl+b3"key expected"local bH=a_(-1)*aY.Cc'end'local bI=b3"invalid JSON"bs=(bE*b7*(a_","*aY.Cc'cont'+a_"]"*aY.Cc'last'+bH+bI)+aY.Cc(nil)*(a_"]"*aY.Cc'empty'+bH+bI))*aY.Cp()local bJ=aY.Cg(b7*bG*b7*(a_":"+b3"colon expected")*bF)bt=(aY.Cc(nil)*aY.Cc(nil)*a_"}"*aY.Cc'empty'+bH+bJ*b7*(a_","*aY.Cc'cont'+a_"}"*aY.Cc'last'+bH+bI)+bI)*aY.Cp()local bK=bF*aY.Cp()q.version=p.version;q.encode=p.encode;q.null=p.null;q.quotestring=p.quotestring;q.addnewline=p.addnewline;q.encodeexception=p.encodeexception;q.using_lpeg=true;function q.decode(L,au,aL,...)local a2={}a2.objectmeta,a2.arraymeta=aX(...)local bv,bL=aZ(bK,L,au,aL,a2)if a2.msg then return nil,a2.pos,a2.msg else return bv,bL end end;p.use_lpeg=function()return q end;q.use_lpeg=p.use_lpeg;return q end;if a then return p.use_lpeg()end;return p
